{"ast":null,"code":"var _jsxFileName = \"/Users/mac/sei/projects/Project3_Team_011_Enjaz/enjaz-front-end/src/components/login/AuthenticatedComponent.js\";\nimport React, { Component } from \"react\";\nimport { getJwt } from \"./helper\";\nimport { getInfo } from \"./decodeToken\";\nimport { withRouter } from \"react-router-dom\";\n\nclass AuthenticatedComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      admin: undefined,\n      user: undefined\n    };\n  }\n\n  componentDidMount() {\n    const jwt = getJwt();\n    let jwt1 = getInfo().data.admin; // this function is responsible to check if the\n    // token is equal to employee or adamant after\n    // decrypting that token\n\n    if (!jwt) {\n      this.setState({\n        user: null,\n        admin: null\n      });\n      return;\n    } else if (jwt1 === true) {\n      this.setState({\n        admin: jwt\n      });\n    } else if (jwt1 === false) {\n      this.setState({\n        user: jwt\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.state.admin !== undefined ? this.props.children[1] : this.props.children[0]);\n  }\n\n}\n\nexport default withRouter(AuthenticatedComponent);","map":{"version":3,"sources":["/Users/mac/sei/projects/Project3_Team_011_Enjaz/enjaz-front-end/src/components/login/AuthenticatedComponent.js"],"names":["React","Component","getJwt","getInfo","withRouter","AuthenticatedComponent","constructor","props","state","admin","undefined","user","componentDidMount","jwt","jwt1","data","setState","render","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,sBAAN,SAAqCJ,SAArC,CAA+C;AAC7CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAEC,SADI;AAEXC,MAAAA,IAAI,EAAED;AAFK,KAAb;AAID;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,GAAG,GAAGX,MAAM,EAAlB;AACA,QAAIY,IAAI,GAAGX,OAAO,GAAGY,IAAV,CAAeN,KAA1B,CAFkB,CAGlB;AACA;AACA;;AACA,QAAI,CAACI,GAAL,EAAU;AACR,WAAKG,QAAL,CAAc;AACZL,QAAAA,IAAI,EAAE,IADM;AAEZF,QAAAA,KAAK,EAAE;AAFK,OAAd;AAIA;AACD,KAND,MAMO,IAAIK,IAAI,KAAK,IAAb,EAAmB;AACxB,WAAKE,QAAL,CAAc;AACZP,QAAAA,KAAK,EAAEI;AADK,OAAd;AAGD,KAJM,MAIA,IAAIC,IAAI,KAAK,KAAb,EAAoB;AACzB,WAAKE,QAAL,CAAc;AACZL,QAAAA,IAAI,EAAEE;AADM,OAAd;AAGD;AACF;;AACDI,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGG,KAAKT,KAAL,CAAWC,KAAX,KAAqBC,SAArB,GACG,KAAKH,KAAL,CAAWW,QAAX,CAAoB,CAApB,CADH,GAEG,KAAKX,KAAL,CAAWW,QAAX,CAAoB,CAApB,CALN,CADF;AASD;;AA1C4C;;AA6C/C,eAAed,UAAU,CAACC,sBAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport { getJwt } from \"./helper\";\nimport { getInfo } from \"./decodeToken\";\nimport { withRouter } from \"react-router-dom\";\n\nclass AuthenticatedComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      admin: undefined,\n      user: undefined\n    };\n  }\n\n  componentDidMount() {\n    const jwt = getJwt();\n    let jwt1 = getInfo().data.admin;\n    // this function is responsible to check if the\n    // token is equal to employee or adamant after\n    // decrypting that token\n    if (!jwt) {\n      this.setState({\n        user: null,\n        admin: null\n      });\n      return;\n    } else if (jwt1 === true) {\n      this.setState({\n        admin: jwt\n      });\n    } else if (jwt1 === false) {\n      this.setState({\n        user: jwt\n      });\n    }\n  }\n  render() {\n    return (\n      <div>\n        {/* check if the state the admin doesn't equal undefined \n      then the permission we'll go to the second child   */}\n        {this.state.admin !== undefined\n          ? this.props.children[1]\n          : this.props.children[0]}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(AuthenticatedComponent);\n"]},"metadata":{},"sourceType":"module"}